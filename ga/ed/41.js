function init41() {
    const N_COEFS = 32

    // { "1","e1","e2","e3","e4","e5","e12","e13","e14","e15","e23","e24","e25","e34","e35","e45","e123","e124","e125","e134","e135","e145","e234","e235","e245","e345","e1234","e1235","e1245","e1345","e2345","e12345" }
    let grades = [
        0,                    // CGA           4D HPGA
        1,1,1,1,1,            //sphere         3-plane
        2,2,2,2,2,2,2,2,2,2,  //circle         plane
        3,3,3,3,3,3,3,3,3,3,  //point pair     line
        4,4,4,4,4,            //point          point
        5]

    class Mv41 extends Float32Array {
        constructor() {
            super(N_COEFS)
        }

        copy(a) {
            for (let i = 0; i < N_COEFS; ++i)
                this[i] = a[i]

            return this
        }

        clone() {
            let cl = new Mv41()
            cl.copy(this)

            return cl
        }

        multiplyScalar(scalar) {
            for (let i = 0; i < N_COEFS; ++i)
                this[i] *= scalar

            return this
        }

        setFromIndexCoef(index,coef) {
            this.copy(zeroMv41)
            this[index] = coef

            return this
        }

        norm() {
            let thisThisConjugate = local0Mv41
            mul41(this,this.Conjugate(local1Mv41),thisThisConjugate)

            return Math.sqrt(Math.abs(thisThisConjugate[0]) )
        }
        inorm() {
            let thisDual = local2Mv41
            this.dual(thisDual)
            return thisDual.norm()
        }
        normalize() { 
            return this.multiplyScalar(1. / this.norm())
        }

        getGrade() {
            let ret = -1 //indicates 0
            for(let i = 0; i < N_COEFS; ++i) {
                if( Math.abs( this[i] ) > .0001 ) {
                    let indicatedGrade = grades[i]
                    if( ret !== -1 && indicatedGrade !== ret)
                        return "mixed grade"
                    ret = indicatedGrade
                }
            }
            return ret
        }

        reverse41(target) {
            target[0] = this[0];
            target[1] = this[1];
            target[2] = this[2];
            target[3] = this[3];
            target[4] = this[4];
            target[5] = this[5];
            target[6] = -this[6];
            target[7] = -this[7];
            target[8] = -this[8];
            target[9] = -this[9];
            target[10] = -this[10];
            target[11] = -this[11];
            target[12] = -this[12];
            target[13] = -this[13];
            target[14] = -this[14];
            target[15] = -this[15];
            target[16] = -this[16];
            target[17] = -this[17];
            target[18] = -this[18];
            target[19] = -this[19];
            target[20] = -this[20];
            target[21] = -this[21];
            target[22] = -this[22];
            target[23] = -this[23];
            target[24] = -this[24];
            target[25] = -this[25];
            target[26] = this[26];
            target[27] = this[27];
            target[28] = this[28];
            target[29] = this[29];
            target[30] = this[30];
            target[31] = this[31];
            return target
        }

        dual41(target) {
            target[0] = -this[31];
            target[1] = -this[30];
            target[2] = this[29];
            target[3] = -this[28];
            target[4] = this[27];
            target[5] = this[26];
            target[6] = this[25];
            target[7] = -this[24];
            target[8] = this[23];
            target[9] = this[22];
            target[10] = this[21];
            target[11] = -this[20];
            target[12] = -this[19];
            target[13] = this[18];
            target[14] = this[17];
            target[15] = -this[16];
            target[16] = this[15];
            target[17] = -this[14];
            target[18] = -this[13];
            target[19] = this[12];
            target[20] = this[11];
            target[21] = -this[10];
            target[22] = -this[9];
            target[23] = -this[8];
            target[24] = this[7];
            target[25] = -this[6];
            target[26] = -this[5];
            target[27] = -this[4];
            target[28] = this[3];
            target[29] = -this[2];
            target[30] = this[1];
            target[31] = this[0];
            return target
        }

        conjugate41(target) {
            target[0] = this[0];
            target[1] = -this[1];
            target[2] = -this[2];
            target[3] = -this[3];
            target[4] = -this[4];
            target[5] = -this[5];
            target[6] = -this[6];
            target[7] = -this[7];
            target[8] = -this[8];
            target[9] = -this[9];
            target[10] = -this[10];
            target[11] = -this[11];
            target[12] = -this[12];
            target[13] = -this[13];
            target[14] = -this[14];
            target[15] = -this[15];
            target[16] = this[16];
            target[17] = this[17];
            target[18] = this[18];
            target[19] = this[19];
            target[20] = this[20];
            target[21] = this[21];
            target[22] = this[22];
            target[23] = this[23];
            target[24] = this[24];
            target[25] = this[25];
            target[26] = this[26];
            target[27] = this[27];
            target[28] = this[28];
            target[29] = this[29];
            target[30] = this[30];
            target[31] = -this[31];
            return target
        }

        involute41(target) {
            target[0] = this[0];
            target[1] = -this[1];
            target[2] = -this[2];
            target[3] = -this[3];
            target[4] = -this[4];
            target[5] = -this[5];
            target[6] = this[6];
            target[7] = this[7];
            target[8] = this[8];
            target[9] = this[9];
            target[10] = this[10];
            target[11] = this[11];
            target[12] = this[12];
            target[13] = this[13];
            target[14] = this[14];
            target[15] = this[15];
            target[16] = -this[16];
            target[17] = -this[17];
            target[18] = -this[18];
            target[19] = -this[19];
            target[20] = -this[20];
            target[21] = -this[21];
            target[22] = -this[22];
            target[23] = -this[23];
            target[24] = -this[24];
            target[25] = -this[25];
            target[26] = this[26];
            target[27] = this[27];
            target[28] = this[28];
            target[29] = this[29];
            target[30] = this[30];
            target[31] = -this[31];
            return target
        }
    }
    window.Mv41 = Mv41

    let zeroMv41 = new Mv41()

    let local0Mv41 = new Mv41()
    let local1Mv41 = new Mv41()
    let local2Mv41 = new Mv41()
    let local3Mv41 = new Mv41()
    let local4Mv41 = new Mv41()
    let local5Mv41 = new Mv41()

    let e1_41 = new Mv41().setFromIndexCoef(1,1.)
    let e2_41 = new Mv41().setFromIndexCoef(2,1.)
    let e3_41 = new Mv41().setFromIndexCoef(3,1.)
    let e4_41 = new Mv41().setFromIndexCoef(4,1.)
    let e5_41 = new Mv41().setFromIndexCoef(5,1.)
    let e12_41 = new Mv41().setFromIndexCoef(6,1.)
    let e13_41 = new Mv41().setFromIndexCoef(7,1.)
    let e14_41 = new Mv41().setFromIndexCoef(8,1.)
    let e15_41 = new Mv41().setFromIndexCoef(9,1.)
    let e23_41 = new Mv41().setFromIndexCoef(10,1.)
    let e24_41 = new Mv41().setFromIndexCoef(11,1.)
    let e25_41 = new Mv41().setFromIndexCoef(12,1.)
    let e34_41 = new Mv41().setFromIndexCoef(13,1.)
    let e35_41 = new Mv41().setFromIndexCoef(14,1.)
    let e45_41 = new Mv41().setFromIndexCoef(15,1.)
    let e123_41 = new Mv41().setFromIndexCoef(16,1.)
    let e124_41 = new Mv41().setFromIndexCoef(17,1.)
    let e125_41 = new Mv41().setFromIndexCoef(18,1.)
    let e134_41 = new Mv41().setFromIndexCoef(19,1.)
    let e135_41 = new Mv41().setFromIndexCoef(20,1.)
    let e145_41 = new Mv41().setFromIndexCoef(21,1.)
    let e234_41 = new Mv41().setFromIndexCoef(22,1.)
    let e235_41 = new Mv41().setFromIndexCoef(23,1.)
    let e245_41 = new Mv41().setFromIndexCoef(24,1.)
    let e345_41 = new Mv41().setFromIndexCoef(25,1.)
    let e1234_41 = new Mv41().setFromIndexCoef(26,1.)
    let e1235_41 = new Mv41().setFromIndexCoef(27,1.)
    let e1245_41 = new Mv41().setFromIndexCoef(28,1.)
    let e1345_41 = new Mv41().setFromIndexCoef(29,1.)
    let e2345_41 = new Mv41().setFromIndexCoef(30,1.)
    let e12345_41 = new Mv41().setFromIndexCoef(31,1.)

    function mul41( a,  b, target) {
        target[0] = b[0] * a[0] + b[1] * a[1] + b[2] * a[2] + b[3] * a[3] + b[4] * a[4] - b[5] * a[5] - b[6] * a[6] - b[7] * a[7] - b[8] * a[8] + b[9] * a[9] - b[10] * a[10] - b[11] * a[11] + b[12] * a[12] - b[13] * a[13] + b[14] * a[14] + b[15] * a[15] - b[16] * a[16] - b[17] * a[17] + b[18] * a[18] - b[19] * a[19] + b[20] * a[20] + b[21] * a[21] - b[22] * a[22] + b[23] * a[23] + b[24] * a[24] + b[25] * a[25] + b[26] * a[26] - b[27] * a[27] - b[28] * a[28] - b[29] * a[29] - b[30] * a[30] - b[31] * a[31];
        target[1] = b[1] * a[0] + b[0] * a[1] - b[6] * a[2] - b[7] * a[3] - b[8] * a[4] + b[9] * a[5] + b[2] * a[6] + b[3] * a[7] + b[4] * a[8] - b[5] * a[9] - b[16] * a[10] - b[17] * a[11] + b[18] * a[12] - b[19] * a[13] + b[20] * a[14] + b[21] * a[15] - b[10] * a[16] - b[11] * a[17] + b[12] * a[18] - b[13] * a[19] + b[14] * a[20] + b[15] * a[21] + b[26] * a[22] - b[27] * a[23] - b[28] * a[24] - b[29] * a[25] - b[22] * a[26] + b[23] * a[27] + b[24] * a[28] + b[25] * a[29] - b[31] * a[30] - b[30] * a[31];
        target[2] = b[2] * a[0] + b[6] * a[1] + b[0] * a[2] - b[10] * a[3] - b[11] * a[4] + b[12] * a[5] - b[1] * a[6] + b[16] * a[7] + b[17] * a[8] - b[18] * a[9] + b[3] * a[10] + b[4] * a[11] - b[5] * a[12] - b[22] * a[13] + b[23] * a[14] + b[24] * a[15] + b[7] * a[16] + b[8] * a[17] - b[9] * a[18] - b[26] * a[19] + b[27] * a[20] + b[28] * a[21] - b[13] * a[22] + b[14] * a[23] + b[15] * a[24] - b[30] * a[25] + b[19] * a[26] - b[20] * a[27] - b[21] * a[28] + b[31] * a[29] + b[25] * a[30] + b[29] * a[31];
        target[3] = b[3] * a[0] + b[7] * a[1] + b[10] * a[2] + b[0] * a[3] - b[13] * a[4] + b[14] * a[5] - b[16] * a[6] - b[1] * a[7] + b[19] * a[8] - b[20] * a[9] - b[2] * a[10] + b[22] * a[11] - b[23] * a[12] + b[4] * a[13] - b[5] * a[14] + b[25] * a[15] - b[6] * a[16] + b[26] * a[17] - b[27] * a[18] + b[8] * a[19] - b[9] * a[20] + b[29] * a[21] + b[11] * a[22] - b[12] * a[23] + b[30] * a[24] + b[15] * a[25] - b[17] * a[26] + b[18] * a[27] - b[31] * a[28] - b[21] * a[29] - b[24] * a[30] - b[28] * a[31];
        target[4] = b[4] * a[0] + b[8] * a[1] + b[11] * a[2] + b[13] * a[3] + b[0] * a[4] + b[15] * a[5] - b[17] * a[6] - b[19] * a[7] - b[1] * a[8] - b[21] * a[9] - b[22] * a[10] - b[2] * a[11] - b[24] * a[12] - b[3] * a[13] - b[25] * a[14] - b[5] * a[15] - b[26] * a[16] - b[6] * a[17] - b[28] * a[18] - b[7] * a[19] - b[29] * a[20] - b[9] * a[21] - b[10] * a[22] - b[30] * a[23] - b[12] * a[24] - b[14] * a[25] + b[16] * a[26] + b[31] * a[27] + b[18] * a[28] + b[20] * a[29] + b[23] * a[30] + b[27] * a[31];
        target[5] = b[5] * a[0] + b[9] * a[1] + b[12] * a[2] + b[14] * a[3] + b[15] * a[4] + b[0] * a[5] - b[18] * a[6] - b[20] * a[7] - b[21] * a[8] - b[1] * a[9] - b[23] * a[10] - b[24] * a[11] - b[2] * a[12] - b[25] * a[13] - b[3] * a[14] - b[4] * a[15] - b[27] * a[16] - b[28] * a[17] - b[6] * a[18] - b[29] * a[19] - b[7] * a[20] - b[8] * a[21] - b[30] * a[22] - b[10] * a[23] - b[11] * a[24] - b[13] * a[25] + b[31] * a[26] + b[16] * a[27] + b[17] * a[28] + b[19] * a[29] + b[22] * a[30] + b[26] * a[31];
        target[6] = b[6] * a[0] + b[2] * a[1] - b[1] * a[2] + b[16] * a[3] + b[17] * a[4] - b[18] * a[5] + b[0] * a[6] - b[10] * a[7] - b[11] * a[8] + b[12] * a[9] + b[7] * a[10] + b[8] * a[11] - b[9] * a[12] - b[26] * a[13] + b[27] * a[14] + b[28] * a[15] + b[3] * a[16] + b[4] * a[17] - b[5] * a[18] - b[22] * a[19] + b[23] * a[20] + b[24] * a[21] + b[19] * a[22] - b[20] * a[23] - b[21] * a[24] + b[31] * a[25] - b[13] * a[26] + b[14] * a[27] + b[15] * a[28] - b[30] * a[29] + b[29] * a[30] + b[25] * a[31];
        target[7] = b[7] * a[0] + b[3] * a[1] - b[16] * a[2] - b[1] * a[3] + b[19] * a[4] - b[20] * a[5] + b[10] * a[6] + b[0] * a[7] - b[13] * a[8] + b[14] * a[9] - b[6] * a[10] + b[26] * a[11] - b[27] * a[12] + b[8] * a[13] - b[9] * a[14] + b[29] * a[15] - b[2] * a[16] + b[22] * a[17] - b[23] * a[18] + b[4] * a[19] - b[5] * a[20] + b[25] * a[21] - b[17] * a[22] + b[18] * a[23] - b[31] * a[24] - b[21] * a[25] + b[11] * a[26] - b[12] * a[27] + b[30] * a[28] + b[15] * a[29] - b[28] * a[30] - b[24] * a[31];
        target[8] = b[8] * a[0] + b[4] * a[1] - b[17] * a[2] - b[19] * a[3] - b[1] * a[4] - b[21] * a[5] + b[11] * a[6] + b[13] * a[7] + b[0] * a[8] + b[15] * a[9] - b[26] * a[10] - b[6] * a[11] - b[28] * a[12] - b[7] * a[13] - b[29] * a[14] - b[9] * a[15] - b[22] * a[16] - b[2] * a[17] - b[24] * a[18] - b[3] * a[19] - b[25] * a[20] - b[5] * a[21] + b[16] * a[22] + b[31] * a[23] + b[18] * a[24] + b[20] * a[25] - b[10] * a[26] - b[30] * a[27] - b[12] * a[28] - b[14] * a[29] + b[27] * a[30] + b[23] * a[31];
        target[9] = b[9] * a[0] + b[5] * a[1] - b[18] * a[2] - b[20] * a[3] - b[21] * a[4] - b[1] * a[5] + b[12] * a[6] + b[14] * a[7] + b[15] * a[8] + b[0] * a[9] - b[27] * a[10] - b[28] * a[11] - b[6] * a[12] - b[29] * a[13] - b[7] * a[14] - b[8] * a[15] - b[23] * a[16] - b[24] * a[17] - b[2] * a[18] - b[25] * a[19] - b[3] * a[20] - b[4] * a[21] + b[31] * a[22] + b[16] * a[23] + b[17] * a[24] + b[19] * a[25] - b[30] * a[26] - b[10] * a[27] - b[11] * a[28] - b[13] * a[29] + b[26] * a[30] + b[22] * a[31];
        target[10] = b[10] * a[0] + b[16] * a[1] + b[3] * a[2] - b[2] * a[3] + b[22] * a[4] - b[23] * a[5] - b[7] * a[6] + b[6] * a[7] - b[26] * a[8] + b[27] * a[9] + b[0] * a[10] - b[13] * a[11] + b[14] * a[12] + b[11] * a[13] - b[12] * a[14] + b[30] * a[15] + b[1] * a[16] - b[19] * a[17] + b[20] * a[18] + b[17] * a[19] - b[18] * a[20] + b[31] * a[21] + b[4] * a[22] - b[5] * a[23] + b[25] * a[24] - b[24] * a[25] - b[8] * a[26] + b[9] * a[27] - b[29] * a[28] + b[28] * a[29] + b[15] * a[30] + b[21] * a[31];
        target[11] = b[11] * a[0] + b[17] * a[1] + b[4] * a[2] - b[22] * a[3] - b[2] * a[4] - b[24] * a[5] - b[8] * a[6] + b[26] * a[7] + b[6] * a[8] + b[28] * a[9] + b[13] * a[10] + b[0] * a[11] + b[15] * a[12] - b[10] * a[13] - b[30] * a[14] - b[12] * a[15] + b[19] * a[16] + b[1] * a[17] + b[21] * a[18] - b[16] * a[19] - b[31] * a[20] - b[18] * a[21] - b[3] * a[22] - b[25] * a[23] - b[5] * a[24] + b[23] * a[25] + b[7] * a[26] + b[29] * a[27] + b[9] * a[28] - b[27] * a[29] - b[14] * a[30] - b[20] * a[31];
        target[12] = b[12] * a[0] + b[18] * a[1] + b[5] * a[2] - b[23] * a[3] - b[24] * a[4] - b[2] * a[5] - b[9] * a[6] + b[27] * a[7] + b[28] * a[8] + b[6] * a[9] + b[14] * a[10] + b[15] * a[11] + b[0] * a[12] - b[30] * a[13] - b[10] * a[14] - b[11] * a[15] + b[20] * a[16] + b[21] * a[17] + b[1] * a[18] - b[31] * a[19] - b[16] * a[20] - b[17] * a[21] - b[25] * a[22] - b[3] * a[23] - b[4] * a[24] + b[22] * a[25] + b[29] * a[26] + b[7] * a[27] + b[8] * a[28] - b[26] * a[29] - b[13] * a[30] - b[19] * a[31];
        target[13] = b[13] * a[0] + b[19] * a[1] + b[22] * a[2] + b[4] * a[3] - b[3] * a[4] - b[25] * a[5] - b[26] * a[6] - b[8] * a[7] + b[7] * a[8] + b[29] * a[9] - b[11] * a[10] + b[10] * a[11] + b[30] * a[12] + b[0] * a[13] + b[15] * a[14] - b[14] * a[15] - b[17] * a[16] + b[16] * a[17] + b[31] * a[18] + b[1] * a[19] + b[21] * a[20] - b[20] * a[21] + b[2] * a[22] + b[24] * a[23] - b[23] * a[24] - b[5] * a[25] - b[6] * a[26] - b[28] * a[27] + b[27] * a[28] + b[9] * a[29] + b[12] * a[30] + b[18] * a[31];
        target[14] = b[14] * a[0] + b[20] * a[1] + b[23] * a[2] + b[5] * a[3] - b[25] * a[4] - b[3] * a[5] - b[27] * a[6] - b[9] * a[7] + b[29] * a[8] + b[7] * a[9] - b[12] * a[10] + b[30] * a[11] + b[10] * a[12] + b[15] * a[13] + b[0] * a[14] - b[13] * a[15] - b[18] * a[16] + b[31] * a[17] + b[16] * a[18] + b[21] * a[19] + b[1] * a[20] - b[19] * a[21] + b[24] * a[22] + b[2] * a[23] - b[22] * a[24] - b[4] * a[25] - b[28] * a[26] - b[6] * a[27] + b[26] * a[28] + b[8] * a[29] + b[11] * a[30] + b[17] * a[31];
        target[15] = b[15] * a[0] + b[21] * a[1] + b[24] * a[2] + b[25] * a[3] + b[5] * a[4] - b[4] * a[5] - b[28] * a[6] - b[29] * a[7] - b[9] * a[8] + b[8] * a[9] - b[30] * a[10] - b[12] * a[11] + b[11] * a[12] - b[14] * a[13] + b[13] * a[14] + b[0] * a[15] - b[31] * a[16] - b[18] * a[17] + b[17] * a[18] - b[20] * a[19] + b[19] * a[20] + b[1] * a[21] - b[23] * a[22] + b[22] * a[23] + b[2] * a[24] + b[3] * a[25] + b[27] * a[26] - b[26] * a[27] - b[6] * a[28] - b[7] * a[29] - b[10] * a[30] - b[16] * a[31];
        target[16] = b[16] * a[0] + b[10] * a[1] - b[7] * a[2] + b[6] * a[3] - b[26] * a[4] + b[27] * a[5] + b[3] * a[6] - b[2] * a[7] + b[22] * a[8] - b[23] * a[9] + b[1] * a[10] - b[19] * a[11] + b[20] * a[12] + b[17] * a[13] - b[18] * a[14] + b[31] * a[15] + b[0] * a[16] - b[13] * a[17] + b[14] * a[18] + b[11] * a[19] - b[12] * a[20] + b[30] * a[21] - b[8] * a[22] + b[9] * a[23] - b[29] * a[24] + b[28] * a[25] + b[4] * a[26] - b[5] * a[27] + b[25] * a[28] - b[24] * a[29] + b[21] * a[30] + b[15] * a[31];
        target[17] = b[17] * a[0] + b[11] * a[1] - b[8] * a[2] + b[26] * a[3] + b[6] * a[4] + b[28] * a[5] + b[4] * a[6] - b[22] * a[7] - b[2] * a[8] - b[24] * a[9] + b[19] * a[10] + b[1] * a[11] + b[21] * a[12] - b[16] * a[13] - b[31] * a[14] - b[18] * a[15] + b[13] * a[16] + b[0] * a[17] + b[15] * a[18] - b[10] * a[19] - b[30] * a[20] - b[12] * a[21] + b[7] * a[22] + b[29] * a[23] + b[9] * a[24] - b[27] * a[25] - b[3] * a[26] - b[25] * a[27] - b[5] * a[28] + b[23] * a[29] - b[20] * a[30] - b[14] * a[31];
        target[18] = b[18] * a[0] + b[12] * a[1] - b[9] * a[2] + b[27] * a[3] + b[28] * a[4] + b[6] * a[5] + b[5] * a[6] - b[23] * a[7] - b[24] * a[8] - b[2] * a[9] + b[20] * a[10] + b[21] * a[11] + b[1] * a[12] - b[31] * a[13] - b[16] * a[14] - b[17] * a[15] + b[14] * a[16] + b[15] * a[17] + b[0] * a[18] - b[30] * a[19] - b[10] * a[20] - b[11] * a[21] + b[29] * a[22] + b[7] * a[23] + b[8] * a[24] - b[26] * a[25] - b[25] * a[26] - b[3] * a[27] - b[4] * a[28] + b[22] * a[29] - b[19] * a[30] - b[13] * a[31];
        target[19] = b[19] * a[0] + b[13] * a[1] - b[26] * a[2] - b[8] * a[3] + b[7] * a[4] + b[29] * a[5] + b[22] * a[6] + b[4] * a[7] - b[3] * a[8] - b[25] * a[9] - b[17] * a[10] + b[16] * a[11] + b[31] * a[12] + b[1] * a[13] + b[21] * a[14] - b[20] * a[15] - b[11] * a[16] + b[10] * a[17] + b[30] * a[18] + b[0] * a[19] + b[15] * a[20] - b[14] * a[21] - b[6] * a[22] - b[28] * a[23] + b[27] * a[24] + b[9] * a[25] + b[2] * a[26] + b[24] * a[27] - b[23] * a[28] - b[5] * a[29] + b[18] * a[30] + b[12] * a[31];
        target[20] = b[20] * a[0] + b[14] * a[1] - b[27] * a[2] - b[9] * a[3] + b[29] * a[4] + b[7] * a[5] + b[23] * a[6] + b[5] * a[7] - b[25] * a[8] - b[3] * a[9] - b[18] * a[10] + b[31] * a[11] + b[16] * a[12] + b[21] * a[13] + b[1] * a[14] - b[19] * a[15] - b[12] * a[16] + b[30] * a[17] + b[10] * a[18] + b[15] * a[19] + b[0] * a[20] - b[13] * a[21] - b[28] * a[22] - b[6] * a[23] + b[26] * a[24] + b[8] * a[25] + b[24] * a[26] + b[2] * a[27] - b[22] * a[28] - b[4] * a[29] + b[17] * a[30] + b[11] * a[31];
        target[21] = b[21] * a[0] + b[15] * a[1] - b[28] * a[2] - b[29] * a[3] - b[9] * a[4] + b[8] * a[5] + b[24] * a[6] + b[25] * a[7] + b[5] * a[8] - b[4] * a[9] - b[31] * a[10] - b[18] * a[11] + b[17] * a[12] - b[20] * a[13] + b[19] * a[14] + b[1] * a[15] - b[30] * a[16] - b[12] * a[17] + b[11] * a[18] - b[14] * a[19] + b[13] * a[20] + b[0] * a[21] + b[27] * a[22] - b[26] * a[23] - b[6] * a[24] - b[7] * a[25] - b[23] * a[26] + b[22] * a[27] + b[2] * a[28] + b[3] * a[29] - b[16] * a[30] - b[10] * a[31];
        target[22] = b[22] * a[0] + b[26] * a[1] + b[13] * a[2] - b[11] * a[3] + b[10] * a[4] + b[30] * a[5] - b[19] * a[6] + b[17] * a[7] - b[16] * a[8] - b[31] * a[9] + b[4] * a[10] - b[3] * a[11] - b[25] * a[12] + b[2] * a[13] + b[24] * a[14] - b[23] * a[15] + b[8] * a[16] - b[7] * a[17] - b[29] * a[18] + b[6] * a[19] + b[28] * a[20] - b[27] * a[21] + b[0] * a[22] + b[15] * a[23] - b[14] * a[24] + b[12] * a[25] - b[1] * a[26] - b[21] * a[27] + b[20] * a[28] - b[18] * a[29] - b[5] * a[30] - b[9] * a[31];
        target[23] = b[23] * a[0] + b[27] * a[1] + b[14] * a[2] - b[12] * a[3] + b[30] * a[4] + b[10] * a[5] - b[20] * a[6] + b[18] * a[7] - b[31] * a[8] - b[16] * a[9] + b[5] * a[10] - b[25] * a[11] - b[3] * a[12] + b[24] * a[13] + b[2] * a[14] - b[22] * a[15] + b[9] * a[16] - b[29] * a[17] - b[7] * a[18] + b[28] * a[19] + b[6] * a[20] - b[26] * a[21] + b[15] * a[22] + b[0] * a[23] - b[13] * a[24] + b[11] * a[25] - b[21] * a[26] - b[1] * a[27] + b[19] * a[28] - b[17] * a[29] - b[4] * a[30] - b[8] * a[31];
        target[24] = b[24] * a[0] + b[28] * a[1] + b[15] * a[2] - b[30] * a[3] - b[12] * a[4] + b[11] * a[5] - b[21] * a[6] + b[31] * a[7] + b[18] * a[8] - b[17] * a[9] + b[25] * a[10] + b[5] * a[11] - b[4] * a[12] - b[23] * a[13] + b[22] * a[14] + b[2] * a[15] + b[29] * a[16] + b[9] * a[17] - b[8] * a[18] - b[27] * a[19] + b[26] * a[20] + b[6] * a[21] - b[14] * a[22] + b[13] * a[23] + b[0] * a[24] - b[10] * a[25] + b[20] * a[26] - b[19] * a[27] - b[1] * a[28] + b[16] * a[29] + b[3] * a[30] + b[7] * a[31];
        target[25] = b[25] * a[0] + b[29] * a[1] + b[30] * a[2] + b[15] * a[3] - b[14] * a[4] + b[13] * a[5] - b[31] * a[6] - b[21] * a[7] + b[20] * a[8] - b[19] * a[9] - b[24] * a[10] + b[23] * a[11] - b[22] * a[12] + b[5] * a[13] - b[4] * a[14] + b[3] * a[15] - b[28] * a[16] + b[27] * a[17] - b[26] * a[18] + b[9] * a[19] - b[8] * a[20] + b[7] * a[21] + b[12] * a[22] - b[11] * a[23] + b[10] * a[24] + b[0] * a[25] - b[18] * a[26] + b[17] * a[27] - b[16] * a[28] - b[1] * a[29] - b[2] * a[30] - b[6] * a[31];
        target[26] = b[26] * a[0] + b[22] * a[1] - b[19] * a[2] + b[17] * a[3] - b[16] * a[4] - b[31] * a[5] + b[13] * a[6] - b[11] * a[7] + b[10] * a[8] + b[30] * a[9] + b[8] * a[10] - b[7] * a[11] - b[29] * a[12] + b[6] * a[13] + b[28] * a[14] - b[27] * a[15] + b[4] * a[16] - b[3] * a[17] - b[25] * a[18] + b[2] * a[19] + b[24] * a[20] - b[23] * a[21] - b[1] * a[22] - b[21] * a[23] + b[20] * a[24] - b[18] * a[25] + b[0] * a[26] + b[15] * a[27] - b[14] * a[28] + b[12] * a[29] - b[9] * a[30] - b[5] * a[31];
        target[27] = b[27] * a[0] + b[23] * a[1] - b[20] * a[2] + b[18] * a[3] - b[31] * a[4] - b[16] * a[5] + b[14] * a[6] - b[12] * a[7] + b[30] * a[8] + b[10] * a[9] + b[9] * a[10] - b[29] * a[11] - b[7] * a[12] + b[28] * a[13] + b[6] * a[14] - b[26] * a[15] + b[5] * a[16] - b[25] * a[17] - b[3] * a[18] + b[24] * a[19] + b[2] * a[20] - b[22] * a[21] - b[21] * a[22] - b[1] * a[23] + b[19] * a[24] - b[17] * a[25] + b[15] * a[26] + b[0] * a[27] - b[13] * a[28] + b[11] * a[29] - b[8] * a[30] - b[4] * a[31];
        target[28] = b[28] * a[0] + b[24] * a[1] - b[21] * a[2] + b[31] * a[3] + b[18] * a[4] - b[17] * a[5] + b[15] * a[6] - b[30] * a[7] - b[12] * a[8] + b[11] * a[9] + b[29] * a[10] + b[9] * a[11] - b[8] * a[12] - b[27] * a[13] + b[26] * a[14] + b[6] * a[15] + b[25] * a[16] + b[5] * a[17] - b[4] * a[18] - b[23] * a[19] + b[22] * a[20] + b[2] * a[21] + b[20] * a[22] - b[19] * a[23] - b[1] * a[24] + b[16] * a[25] - b[14] * a[26] + b[13] * a[27] + b[0] * a[28] - b[10] * a[29] + b[7] * a[30] + b[3] * a[31];
        target[29] = b[29] * a[0] + b[25] * a[1] - b[31] * a[2] - b[21] * a[3] + b[20] * a[4] - b[19] * a[5] + b[30] * a[6] + b[15] * a[7] - b[14] * a[8] + b[13] * a[9] - b[28] * a[10] + b[27] * a[11] - b[26] * a[12] + b[9] * a[13] - b[8] * a[14] + b[7] * a[15] - b[24] * a[16] + b[23] * a[17] - b[22] * a[18] + b[5] * a[19] - b[4] * a[20] + b[3] * a[21] - b[18] * a[22] + b[17] * a[23] - b[16] * a[24] - b[1] * a[25] + b[12] * a[26] - b[11] * a[27] + b[10] * a[28] + b[0] * a[29] - b[6] * a[30] - b[2] * a[31];
        target[30] = b[30] * a[0] + b[31] * a[1] + b[25] * a[2] - b[24] * a[3] + b[23] * a[4] - b[22] * a[5] - b[29] * a[6] + b[28] * a[7] - b[27] * a[8] + b[26] * a[9] + b[15] * a[10] - b[14] * a[11] + b[13] * a[12] + b[12] * a[13] - b[11] * a[14] + b[10] * a[15] + b[21] * a[16] - b[20] * a[17] + b[19] * a[18] + b[18] * a[19] - b[17] * a[20] + b[16] * a[21] + b[5] * a[22] - b[4] * a[23] + b[3] * a[24] - b[2] * a[25] - b[9] * a[26] + b[8] * a[27] - b[7] * a[28] + b[6] * a[29] + b[0] * a[30] + b[1] * a[31];
        target[31] = b[31] * a[0] + b[30] * a[1] - b[29] * a[2] + b[28] * a[3] - b[27] * a[4] + b[26] * a[5] + b[25] * a[6] - b[24] * a[7] + b[23] * a[8] - b[22] * a[9] + b[21] * a[10] - b[20] * a[11] + b[19] * a[12] + b[18] * a[13] - b[17] * a[14] + b[16] * a[15] + b[15] * a[16] - b[14] * a[17] + b[13] * a[18] + b[12] * a[19] - b[11] * a[20] + b[10] * a[21] - b[9] * a[22] + b[8] * a[23] - b[7] * a[24] + b[6] * a[25] + b[5] * a[26] - b[4] * a[27] + b[3] * a[28] - b[2] * a[29] + b[1] * a[30] + b[0] * a[31];
        return target
    }

    function meet41( a,  b, target) {
        target[0] = b[0] * a[0];
        target[1] = b[1] * a[0] + b[0] * a[1];
        target[2] = b[2] * a[0] + b[0] * a[2];
        target[3] = b[3] * a[0] + b[0] * a[3];
        target[4] = b[4] * a[0] + b[0] * a[4];
        target[5] = b[5] * a[0] + b[0] * a[5];
        target[6] = b[6] * a[0] + b[2] * a[1] - b[1] * a[2] + b[0] * a[6];
        target[7] = b[7] * a[0] + b[3] * a[1] - b[1] * a[3] + b[0] * a[7];
        target[8] = b[8] * a[0] + b[4] * a[1] - b[1] * a[4] + b[0] * a[8];
        target[9] = b[9] * a[0] + b[5] * a[1] - b[1] * a[5] + b[0] * a[9];
        target[10] = b[10] * a[0] + b[3] * a[2] - b[2] * a[3] + b[0] * a[10];
        target[11] = b[11] * a[0] + b[4] * a[2] - b[2] * a[4] + b[0] * a[11];
        target[12] = b[12] * a[0] + b[5] * a[2] - b[2] * a[5] + b[0] * a[12];
        target[13] = b[13] * a[0] + b[4] * a[3] - b[3] * a[4] + b[0] * a[13];
        target[14] = b[14] * a[0] + b[5] * a[3] - b[3] * a[5] + b[0] * a[14];
        target[15] = b[15] * a[0] + b[5] * a[4] - b[4] * a[5] + b[0] * a[15];
        target[16] = b[16] * a[0] + b[10] * a[1] - b[7] * a[2] + b[6] * a[3] + b[3] * a[6] - b[2] * a[7] + b[1] * a[10] + b[0] * a[16];
        target[17] = b[17] * a[0] + b[11] * a[1] - b[8] * a[2] + b[6] * a[4] + b[4] * a[6] - b[2] * a[8] + b[1] * a[11] + b[0] * a[17];
        target[18] = b[18] * a[0] + b[12] * a[1] - b[9] * a[2] + b[6] * a[5] + b[5] * a[6] - b[2] * a[9] + b[1] * a[12] + b[0] * a[18];
        target[19] = b[19] * a[0] + b[13] * a[1] - b[8] * a[3] + b[7] * a[4] + b[4] * a[7] - b[3] * a[8] + b[1] * a[13] + b[0] * a[19];
        target[20] = b[20] * a[0] + b[14] * a[1] - b[9] * a[3] + b[7] * a[5] + b[5] * a[7] - b[3] * a[9] + b[1] * a[14] + b[0] * a[20];
        target[21] = b[21] * a[0] + b[15] * a[1] - b[9] * a[4] + b[8] * a[5] + b[5] * a[8] - b[4] * a[9] + b[1] * a[15] + b[0] * a[21];
        target[22] = b[22] * a[0] + b[13] * a[2] - b[11] * a[3] + b[10] * a[4] + b[4] * a[10] - b[3] * a[11] + b[2] * a[13] + b[0] * a[22];
        target[23] = b[23] * a[0] + b[14] * a[2] - b[12] * a[3] + b[10] * a[5] + b[5] * a[10] - b[3] * a[12] + b[2] * a[14] + b[0] * a[23];
        target[24] = b[24] * a[0] + b[15] * a[2] - b[12] * a[4] + b[11] * a[5] + b[5] * a[11] - b[4] * a[12] + b[2] * a[15] + b[0] * a[24];
        target[25] = b[25] * a[0] + b[15] * a[3] - b[14] * a[4] + b[13] * a[5] + b[5] * a[13] - b[4] * a[14] + b[3] * a[15] + b[0] * a[25];
        target[26] = b[26] * a[0] + b[22] * a[1] - b[19] * a[2] + b[17] * a[3] - b[16] * a[4] + b[13] * a[6] - b[11] * a[7] + b[10] * a[8] + b[8] * a[10] - b[7] * a[11] + b[6] * a[13] + b[4] * a[16] - b[3] * a[17] + b[2] * a[19] - b[1] * a[22] + b[0] * a[26];
        target[27] = b[27] * a[0] + b[23] * a[1] - b[20] * a[2] + b[18] * a[3] - b[16] * a[5] + b[14] * a[6] - b[12] * a[7] + b[10] * a[9] + b[9] * a[10] - b[7] * a[12] + b[6] * a[14] + b[5] * a[16] - b[3] * a[18] + b[2] * a[20] - b[1] * a[23] + b[0] * a[27];
        target[28] = b[28] * a[0] + b[24] * a[1] - b[21] * a[2] + b[18] * a[4] - b[17] * a[5] + b[15] * a[6] - b[12] * a[8] + b[11] * a[9] + b[9] * a[11] - b[8] * a[12] + b[6] * a[15] + b[5] * a[17] - b[4] * a[18] + b[2] * a[21] - b[1] * a[24] + b[0] * a[28];
        target[29] = b[29] * a[0] + b[25] * a[1] - b[21] * a[3] + b[20] * a[4] - b[19] * a[5] + b[15] * a[7] - b[14] * a[8] + b[13] * a[9] + b[9] * a[13] - b[8] * a[14] + b[7] * a[15] + b[5] * a[19] - b[4] * a[20] + b[3] * a[21] - b[1] * a[25] + b[0] * a[29];
        target[30] = b[30] * a[0] + b[25] * a[2] - b[24] * a[3] + b[23] * a[4] - b[22] * a[5] + b[15] * a[10] - b[14] * a[11] + b[13] * a[12] + b[12] * a[13] - b[11] * a[14] + b[10] * a[15] + b[5] * a[22] - b[4] * a[23] + b[3] * a[24] - b[2] * a[25] + b[0] * a[30];
        target[31] = b[31] * a[0] + b[30] * a[1] - b[29] * a[2] + b[28] * a[3] - b[27] * a[4] + b[26] * a[5] + b[25] * a[6] - b[24] * a[7] + b[23] * a[8] - b[22] * a[9] + b[21] * a[10] - b[20] * a[11] + b[19] * a[12] + b[18] * a[13] - b[17] * a[14] + b[16] * a[15] + b[15] * a[16] - b[14] * a[17] + b[13] * a[18] + b[12] * a[19] - b[11] * a[20] + b[10] * a[21] - b[9] * a[22] + b[8] * a[23] - b[7] * a[24] + b[6] * a[25] + b[5] * a[26] - b[4] * a[27] + b[3] * a[28] - b[2] * a[29] + b[1] * a[30] + b[0] * a[31];
        return target
    }

    function join41( a,  b, target) {
        target[31] = 1 * (a[31] * b[31]);
        target[30] = 1 * (a[30] * b[31] + a[31] * b[30]);
        target[29] = -1 * (a[29] * -1 * b[31] + a[31] * b[29] * -1);
        target[28] = 1 * (a[28] * b[31] + a[31] * b[28]);
        target[27] = -1 * (a[27] * -1 * b[31] + a[31] * b[27] * -1);
        target[26] = 1 * (a[26] * b[31] + a[31] * b[26]);
        target[25] = 1 * (a[25] * b[31] + a[29] * -1 * b[30] - a[30] * b[29] * -1 + a[31] * b[25]);
        target[24] = -1 * (a[24] * -1 * b[31] + a[28] * b[30] - a[30] * b[28] + a[31] * b[24] * -1);
        target[23] = 1 * (a[23] * b[31] + a[27] * -1 * b[30] - a[30] * b[27] * -1 + a[31] * b[23]);
        target[22] = -1 * (a[22] * -1 * b[31] + a[26] * b[30] - a[30] * b[26] + a[31] * b[22] * -1);
        target[21] = 1 * (a[21] * b[31] + a[28] * b[29] * -1 - a[29] * -1 * b[28] + a[31] * b[21]);
        target[20] = -1 * (a[20] * -1 * b[31] + a[27] * -1 * b[29] * -1 - a[29] * -1 * b[27] * -1 + a[31] * b[20] * -1);
        target[19] = 1 * (a[19] * b[31] + a[26] * b[29] * -1 - a[29] * -1 * b[26] + a[31] * b[19]);
        target[18] = 1 * (a[18] * b[31] + a[27] * -1 * b[28] - a[28] * b[27] * -1 + a[31] * b[18]);
        target[17] = -1 * (a[17] * -1 * b[31] + a[26] * b[28] - a[28] * b[26] + a[31] * b[17] * -1);
        target[16] = 1 * (a[16] * b[31] + a[26] * b[27] * -1 - a[27] * -1 * b[26] + a[31] * b[16]);
        target[15] = 1 * (a[15] * b[31] + a[21] * b[30] - a[24] * -1 * b[29] * -1 + a[25] * b[28] + a[28] * b[25] - a[29] * -1 * b[24] * -1 + a[30] * b[21] + a[31] * b[15]);
        target[14] = -1 * (a[14] * -1 * b[31] + a[20] * -1 * b[30] - a[23] * b[29] * -1 + a[25] * b[27] * -1 + a[27] * -1 * b[25] - a[29] * -1 * b[23] + a[30] * b[20] * -1 + a[31] * b[14] * -1);
        target[13] = 1 * (a[13] * b[31] + a[19] * b[30] - a[22] * -1 * b[29] * -1 + a[25] * b[26] + a[26] * b[25] - a[29] * -1 * b[22] * -1 + a[30] * b[19] + a[31] * b[13]);
        target[12] = 1 * (a[12] * b[31] + a[18] * b[30] - a[23] * b[28] + a[24] * -1 * b[27] * -1 + a[27] * -1 * b[24] * -1 - a[28] * b[23] + a[30] * b[18] + a[31] * b[12]);
        target[11] = -1 * (a[11] * -1 * b[31] + a[17] * -1 * b[30] - a[22] * -1 * b[28] + a[24] * -1 * b[26] + a[26] * b[24] * -1 - a[28] * b[22] * -1 + a[30] * b[17] * -1 + a[31] * b[11] * -1);
        target[10] = 1 * (a[10] * b[31] + a[16] * b[30] - a[22] * -1 * b[27] * -1 + a[23] * b[26] + a[26] * b[23] - a[27] * -1 * b[22] * -1 + a[30] * b[16] + a[31] * b[10]);
        target[9] = -1 * (a[9] * -1 * b[31] + a[18] * b[29] * -1 - a[20] * -1 * b[28] + a[21] * b[27] * -1 + a[27] * -1 * b[21] - a[28] * b[20] * -1 + a[29] * -1 * b[18] + a[31] * b[9] * -1);
        target[8] = 1 * (a[8] * b[31] + a[17] * -1 * b[29] * -1 - a[19] * b[28] + a[21] * b[26] + a[26] * b[21] - a[28] * b[19] + a[29] * -1 * b[17] * -1 + a[31] * b[8]);
        target[7] = -1 * (a[7] * -1 * b[31] + a[16] * b[29] * -1 - a[19] * b[27] * -1 + a[20] * -1 * b[26] + a[26] * b[20] * -1 - a[27] * -1 * b[19] + a[29] * -1 * b[16] + a[31] * b[7] * -1);
        target[6] = 1 * (a[6] * b[31] + a[16] * b[28] - a[17] * -1 * b[27] * -1 + a[18] * b[26] + a[26] * b[18] - a[27] * -1 * b[17] * -1 + a[28] * b[16] + a[31] * b[6]);
        target[5] = 1 * (a[5] * b[31] + a[9] * -1 * b[30] - a[12] * b[29] * -1 + a[14] * -1 * b[28] - a[15] * b[27] * -1 + a[18] * b[25] - a[20] * -1 * b[24] * -1 + a[21] * b[23] + a[23] * b[21] - a[24] * -1 * b[20] * -1 + a[25] * b[18] + a[27] * -1 * b[15] - a[28] * b[14] * -1 + a[29] * -1 * b[12] - a[30] * b[9] * -1 + a[31] * b[5]);
        target[4] = -1 * (a[4] * -1 * b[31] + a[8] * b[30] - a[11] * -1 * b[29] * -1 + a[13] * b[28] - a[15] * b[26] + a[17] * -1 * b[25] - a[19] * b[24] * -1 + a[21] * b[22] * -1 + a[22] * -1 * b[21] - a[24] * -1 * b[19] + a[25] * b[17] * -1 + a[26] * b[15] - a[28] * b[13] + a[29] * -1 * b[11] * -1 - a[30] * b[8] + a[31] * b[4] * -1);
        target[3] = 1 * (a[3] * b[31] + a[7] * -1 * b[30] - a[10] * b[29] * -1 + a[13] * b[27] * -1 - a[14] * -1 * b[26] + a[16] * b[25] - a[19] * b[23] + a[20] * -1 * b[22] * -1 + a[22] * -1 * b[20] * -1 - a[23] * b[19] + a[25] * b[16] + a[26] * b[14] * -1 - a[27] * -1 * b[13] + a[29] * -1 * b[10] - a[30] * b[7] * -1 + a[31] * b[3]);
        target[2] = -1 * (a[2] * -1 * b[31] + a[6] * b[30] - a[10] * b[28] + a[11] * -1 * b[27] * -1 - a[12] * b[26] + a[16] * b[24] * -1 - a[17] * -1 * b[23] + a[18] * b[22] * -1 + a[22] * -1 * b[18] - a[23] * b[17] * -1 + a[24] * -1 * b[16] + a[26] * b[12] - a[27] * -1 * b[11] * -1 + a[28] * b[10] - a[30] * b[6] + a[31] * b[2] * -1);
        target[1] = 1 * (a[1] * b[31] + a[6] * b[29] * -1 - a[7] * -1 * b[28] + a[8] * b[27] * -1 - a[9] * -1 * b[26] + a[16] * b[21] - a[17] * -1 * b[20] * -1 + a[18] * b[19] + a[19] * b[18] - a[20] * -1 * b[17] * -1 + a[21] * b[16] + a[26] * b[9] * -1 - a[27] * -1 * b[8] + a[28] * b[7] * -1 - a[29] * -1 * b[6] + a[31] * b[1]);
        target[0] = 1 * (a[0] * b[31] + a[1] * b[30] - a[2] * -1 * b[29] * -1 + a[3] * b[28] - a[4] * -1 * b[27] * -1 + a[5] * b[26] + a[6] * b[25] - a[7] * -1 * b[24] * -1 + a[8] * b[23] - a[9] * -1 * b[22] * -1 + a[10] * b[21] - a[11] * -1 * b[20] * -1 + a[12] * b[19] + a[13] * b[18] - a[14] * -1 * b[17] * -1 + a[15] * b[16] + a[16] * b[15] - a[17] * -1 * b[14] * -1 + a[18] * b[13] + a[19] * b[12] - a[20] * -1 * b[11] * -1 + a[21] * b[10] - a[22] * -1 * b[9] * -1 + a[23] * b[8] - a[24] * -1 * b[7] * -1 + a[25] * b[6] + a[26] * b[5] - a[27] * -1 * b[4] * -1 + a[28] * b[3] - a[29] * -1 * b[2] * -1 + a[30] * b[1] + a[31] * b[0]);
        return target
    }
    
    function inner41( a,  b, target) {
        target[0] = b[0] * a[0] + b[1] * a[1] + b[2] * a[2] + b[3] * a[3] + b[4] * a[4] - b[5] * a[5] - b[6] * a[6] - b[7] * a[7] - b[8] * a[8] + b[9] * a[9] - b[10] * a[10] - b[11] * a[11] + b[12] * a[12] - b[13] * a[13] + b[14] * a[14] + b[15] * a[15] - b[16] * a[16] - b[17] * a[17] + b[18] * a[18] - b[19] * a[19] + b[20] * a[20] + b[21] * a[21] - b[22] * a[22] + b[23] * a[23] + b[24] * a[24] + b[25] * a[25] + b[26] * a[26] - b[27] * a[27] - b[28] * a[28] - b[29] * a[29] - b[30] * a[30] - b[31] * a[31];
        target[1] = b[1] * a[0] + b[0] * a[1] - b[6] * a[2] - b[7] * a[3] - b[8] * a[4] + b[9] * a[5] + b[2] * a[6] + b[3] * a[7] + b[4] * a[8] - b[5] * a[9] - b[16] * a[10] - b[17] * a[11] + b[18] * a[12] - b[19] * a[13] + b[20] * a[14] + b[21] * a[15] - b[10] * a[16] - b[11] * a[17] + b[12] * a[18] - b[13] * a[19] + b[14] * a[20] + b[15] * a[21] + b[26] * a[22] - b[27] * a[23] - b[28] * a[24] - b[29] * a[25] - b[22] * a[26] + b[23] * a[27] + b[24] * a[28] + b[25] * a[29] - b[31] * a[30] - b[30] * a[31];
        target[2] = b[2] * a[0] + b[6] * a[1] + b[0] * a[2] - b[10] * a[3] - b[11] * a[4] + b[12] * a[5] - b[1] * a[6] + b[16] * a[7] + b[17] * a[8] - b[18] * a[9] + b[3] * a[10] + b[4] * a[11] - b[5] * a[12] - b[22] * a[13] + b[23] * a[14] + b[24] * a[15] + b[7] * a[16] + b[8] * a[17] - b[9] * a[18] - b[26] * a[19] + b[27] * a[20] + b[28] * a[21] - b[13] * a[22] + b[14] * a[23] + b[15] * a[24] - b[30] * a[25] + b[19] * a[26] - b[20] * a[27] - b[21] * a[28] + b[31] * a[29] + b[25] * a[30] + b[29] * a[31];
        target[3] = b[3] * a[0] + b[7] * a[1] + b[10] * a[2] + b[0] * a[3] - b[13] * a[4] + b[14] * a[5] - b[16] * a[6] - b[1] * a[7] + b[19] * a[8] - b[20] * a[9] - b[2] * a[10] + b[22] * a[11] - b[23] * a[12] + b[4] * a[13] - b[5] * a[14] + b[25] * a[15] - b[6] * a[16] + b[26] * a[17] - b[27] * a[18] + b[8] * a[19] - b[9] * a[20] + b[29] * a[21] + b[11] * a[22] - b[12] * a[23] + b[30] * a[24] + b[15] * a[25] - b[17] * a[26] + b[18] * a[27] - b[31] * a[28] - b[21] * a[29] - b[24] * a[30] - b[28] * a[31];
        target[4] = b[4] * a[0] + b[8] * a[1] + b[11] * a[2] + b[13] * a[3] + b[0] * a[4] + b[15] * a[5] - b[17] * a[6] - b[19] * a[7] - b[1] * a[8] - b[21] * a[9] - b[22] * a[10] - b[2] * a[11] - b[24] * a[12] - b[3] * a[13] - b[25] * a[14] - b[5] * a[15] - b[26] * a[16] - b[6] * a[17] - b[28] * a[18] - b[7] * a[19] - b[29] * a[20] - b[9] * a[21] - b[10] * a[22] - b[30] * a[23] - b[12] * a[24] - b[14] * a[25] + b[16] * a[26] + b[31] * a[27] + b[18] * a[28] + b[20] * a[29] + b[23] * a[30] + b[27] * a[31];
        target[5] = b[5] * a[0] + b[9] * a[1] + b[12] * a[2] + b[14] * a[3] + b[15] * a[4] + b[0] * a[5] - b[18] * a[6] - b[20] * a[7] - b[21] * a[8] - b[1] * a[9] - b[23] * a[10] - b[24] * a[11] - b[2] * a[12] - b[25] * a[13] - b[3] * a[14] - b[4] * a[15] - b[27] * a[16] - b[28] * a[17] - b[6] * a[18] - b[29] * a[19] - b[7] * a[20] - b[8] * a[21] - b[30] * a[22] - b[10] * a[23] - b[11] * a[24] - b[13] * a[25] + b[31] * a[26] + b[16] * a[27] + b[17] * a[28] + b[19] * a[29] + b[22] * a[30] + b[26] * a[31];
        target[6] = b[6] * a[0] + b[16] * a[3] + b[17] * a[4] - b[18] * a[5] + b[0] * a[6] - b[26] * a[13] + b[27] * a[14] + b[28] * a[15] + b[3] * a[16] + b[4] * a[17] - b[5] * a[18] + b[31] * a[25] - b[13] * a[26] + b[14] * a[27] + b[15] * a[28] + b[25] * a[31];
        target[7] = b[7] * a[0] - b[16] * a[2] + b[19] * a[4] - b[20] * a[5] + b[0] * a[7] + b[26] * a[11] - b[27] * a[12] + b[29] * a[15] - b[2] * a[16] + b[4] * a[19] - b[5] * a[20] - b[31] * a[24] + b[11] * a[26] - b[12] * a[27] + b[15] * a[29] - b[24] * a[31];
        target[8] = b[8] * a[0] - b[17] * a[2] - b[19] * a[3] - b[21] * a[5] + b[0] * a[8] - b[26] * a[10] - b[28] * a[12] - b[29] * a[14] - b[2] * a[17] - b[3] * a[19] - b[5] * a[21] + b[31] * a[23] - b[10] * a[26] - b[12] * a[28] - b[14] * a[29] + b[23] * a[31];
        target[9] = b[9] * a[0] - b[18] * a[2] - b[20] * a[3] - b[21] * a[4] + b[0] * a[9] - b[27] * a[10] - b[28] * a[11] - b[29] * a[13] - b[2] * a[18] - b[3] * a[20] - b[4] * a[21] + b[31] * a[22] - b[10] * a[27] - b[11] * a[28] - b[13] * a[29] + b[22] * a[31];
        target[10] = b[10] * a[0] + b[16] * a[1] + b[22] * a[4] - b[23] * a[5] - b[26] * a[8] + b[27] * a[9] + b[0] * a[10] + b[30] * a[15] + b[1] * a[16] + b[31] * a[21] + b[4] * a[22] - b[5] * a[23] - b[8] * a[26] + b[9] * a[27] + b[15] * a[30] + b[21] * a[31];
        target[11] = b[11] * a[0] + b[17] * a[1] - b[22] * a[3] - b[24] * a[5] + b[26] * a[7] + b[28] * a[9] + b[0] * a[11] - b[30] * a[14] + b[1] * a[17] - b[31] * a[20] - b[3] * a[22] - b[5] * a[24] + b[7] * a[26] + b[9] * a[28] - b[14] * a[30] - b[20] * a[31];
        target[12] = b[12] * a[0] + b[18] * a[1] - b[23] * a[3] - b[24] * a[4] + b[27] * a[7] + b[28] * a[8] + b[0] * a[12] - b[30] * a[13] + b[1] * a[18] - b[31] * a[19] - b[3] * a[23] - b[4] * a[24] + b[7] * a[27] + b[8] * a[28] - b[13] * a[30] - b[19] * a[31];
        target[13] = b[13] * a[0] + b[19] * a[1] + b[22] * a[2] - b[25] * a[5] - b[26] * a[6] + b[29] * a[9] + b[30] * a[12] + b[0] * a[13] + b[31] * a[18] + b[1] * a[19] + b[2] * a[22] - b[5] * a[25] - b[6] * a[26] + b[9] * a[29] + b[12] * a[30] + b[18] * a[31];
        target[14] = b[14] * a[0] + b[20] * a[1] + b[23] * a[2] - b[25] * a[4] - b[27] * a[6] + b[29] * a[8] + b[30] * a[11] + b[0] * a[14] + b[31] * a[17] + b[1] * a[20] + b[2] * a[23] - b[4] * a[25] - b[6] * a[27] + b[8] * a[29] + b[11] * a[30] + b[17] * a[31];
        target[15] = b[15] * a[0] + b[21] * a[1] + b[24] * a[2] + b[25] * a[3] - b[28] * a[6] - b[29] * a[7] - b[30] * a[10] + b[0] * a[15] - b[31] * a[16] + b[1] * a[21] + b[2] * a[24] + b[3] * a[25] - b[6] * a[28] - b[7] * a[29] - b[10] * a[30] - b[16] * a[31];
        target[16] = b[16] * a[0] - b[26] * a[4] + b[27] * a[5] + b[31] * a[15] + b[0] * a[16] + b[4] * a[26] - b[5] * a[27] + b[15] * a[31];
        target[17] = b[17] * a[0] + b[26] * a[3] + b[28] * a[5] - b[31] * a[14] + b[0] * a[17] - b[3] * a[26] - b[5] * a[28] - b[14] * a[31];
        target[18] = b[18] * a[0] + b[27] * a[3] + b[28] * a[4] - b[31] * a[13] + b[0] * a[18] - b[3] * a[27] - b[4] * a[28] - b[13] * a[31];
        target[19] = b[19] * a[0] - b[26] * a[2] + b[29] * a[5] + b[31] * a[12] + b[0] * a[19] + b[2] * a[26] - b[5] * a[29] + b[12] * a[31];
        target[20] = b[20] * a[0] - b[27] * a[2] + b[29] * a[4] + b[31] * a[11] + b[0] * a[20] + b[2] * a[27] - b[4] * a[29] + b[11] * a[31];
        target[21] = b[21] * a[0] - b[28] * a[2] - b[29] * a[3] - b[31] * a[10] + b[0] * a[21] + b[2] * a[28] + b[3] * a[29] - b[10] * a[31];
        target[22] = b[22] * a[0] + b[26] * a[1] + b[30] * a[5] - b[31] * a[9] + b[0] * a[22] - b[1] * a[26] - b[5] * a[30] - b[9] * a[31];
        target[23] = b[23] * a[0] + b[27] * a[1] + b[30] * a[4] - b[31] * a[8] + b[0] * a[23] - b[1] * a[27] - b[4] * a[30] - b[8] * a[31];
        target[24] = b[24] * a[0] + b[28] * a[1] - b[30] * a[3] + b[31] * a[7] + b[0] * a[24] - b[1] * a[28] + b[3] * a[30] + b[7] * a[31];
        target[25] = b[25] * a[0] + b[29] * a[1] + b[30] * a[2] - b[31] * a[6] + b[0] * a[25] - b[1] * a[29] - b[2] * a[30] - b[6] * a[31];
        target[26] = b[26] * a[0] - b[31] * a[5] + b[0] * a[26] - b[5] * a[31];
        target[27] = b[27] * a[0] - b[31] * a[4] + b[0] * a[27] - b[4] * a[31];
        target[28] = b[28] * a[0] + b[31] * a[3] + b[0] * a[28] + b[3] * a[31];
        target[29] = b[29] * a[0] - b[31] * a[2] + b[0] * a[29] - b[2] * a[31];
        target[30] = b[30] * a[0] + b[31] * a[1] + b[0] * a[30] + b[1] * a[31];
        target[31] = b[31] * a[0] + b[0] * a[31];
        return target
    }

    function add41( a,  b, target) {
        target[0] = a[0] + b[0];
        target[1] = a[1] + b[1];
        target[2] = a[2] + b[2];
        target[3] = a[3] + b[3];
        target[4] = a[4] + b[4];
        target[5] = a[5] + b[5];
        target[6] = a[6] + b[6];
        target[7] = a[7] + b[7];
        target[8] = a[8] + b[8];
        target[9] = a[9] + b[9];
        target[10] = a[10] + b[10];
        target[11] = a[11] + b[11];
        target[12] = a[12] + b[12];
        target[13] = a[13] + b[13];
        target[14] = a[14] + b[14];
        target[15] = a[15] + b[15];
        target[16] = a[16] + b[16];
        target[17] = a[17] + b[17];
        target[18] = a[18] + b[18];
        target[19] = a[19] + b[19];
        target[20] = a[20] + b[20];
        target[21] = a[21] + b[21];
        target[22] = a[22] + b[22];
        target[23] = a[23] + b[23];
        target[24] = a[24] + b[24];
        target[25] = a[25] + b[25];
        target[26] = a[26] + b[26];
        target[27] = a[27] + b[27];
        target[28] = a[28] + b[28];
        target[29] = a[29] + b[29];
        target[30] = a[30] + b[30];
        target[31] = a[31] + b[31];
        return target
    }

    function sub41(a, b,target) {
        target[0] = a[0] - b[0] 
        target[1] = a[1] - b[1];
        target[2] = a[2] - b[2];
        target[3] = a[3] - b[3];
        target[4] = a[4] - b[4];
        target[5] = a[5] - b[5];
        target[6] = a[6] - b[6];
        target[7] = a[7] - b[7];
        target[8] = a[8] - b[8];
        target[9] = a[9] - b[9];
        target[10] = a[10] - b[10];
        target[11] = a[11] - b[11];
        target[12] = a[12] - b[12];
        target[13] = a[13] - b[13];
        target[14] = a[14] - b[14];
        target[15] = a[15] - b[15];
        target[16] = a[16] - b[16];
        target[17] = a[17] - b[17];
        target[18] = a[18] - b[18];
        target[19] = a[19] - b[19];
        target[20] = a[20] - b[20];
        target[21] = a[21] - b[21];
        target[22] = a[22] - b[22];
        target[23] = a[23] - b[23];
        target[24] = a[24] - b[24];
        target[25] = a[25] - b[25];
        target[26] = a[26] - b[26];
        target[27] = a[27] - b[27];
        target[28] = a[28] - b[28];
        target[29] = a[29] - b[29];
        target[30] = a[30] - b[30];
        target[31] = a[31] - b[31];
        return target
    }


    let oSphere = add41(e5_41,e4_41,new Mv41()).multiplyScalar(.5)
    let iSphere = sub41(e5_41,e4_41,new Mv41()).multiplyScalar(.5)

    let addition = local0Mv41
    addition.copy(iSphere).multiplyScalar(3.)
    let ourSphere = new Mv41()
    add41(oSphere,addition,ourSphere)
    log(ourSphere)
    // debugger
    log( meet41(e12_41,ourSphere,new Mv41()).getGrade() )

    //could project on the plane?
    //could take the rotor from the point pair at origin and infinity and our point pair
}